class Solution:
    def peopleAwareOfSecret(self, n: int, delay: int, forget: int) -> int:
        MOD = 10**9 + 7
        dp = [0] * (n + 1)  # dp[i] = number of people who learn the secret on day i
        dp[1] = 1

        share = 0  # Number of people who can share the secret

        for day in range(2, n + 1):
            # Add new sharers who became eligible today
            if day - delay >= 1:
                share = (share + dp[day - delay]) % MOD
            # Remove those who forget the secret today
            if day - forget >= 1:
                share = (share - dp[day - forget]) % MOD
            # People who learn the secret today
            dp[day] = share % MOD

        # Sum up all people who still remember the secret on day n
        return sum(dp[n - forget + 1 : n + 1]) % MOD
